<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
    <POU Name="{{ test_fb_name }}" Id="{{ '{' -}} {{ pou_guid }} {{- '}' }}" SpecialFunc="None">
    <Declaration><![CDATA[
(* WARNING: This file is auto-generated. Do not modify it.*)
FUNCTION_BLOCK {{ test_fb_name }} EXTENDS TcUnit.FB_TestSuite
VAR
    fbTest : {{ fb_name }};
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[
(* WARNING: This file is auto-generated. Do not modify it.*)
{% for table in tables %}
TEST('Lookups for {{ table.identifier }}');

fbTest.sTableName := '{{ table.identifier }}';

fbTest({{ lookup_input }} := {{ table.first_lookup - 1.0 }});
AssertFalse(fbTest.bFound, 'Value should not be in table');
AssertFalse(fbTest.bError, 'No error expected');
fbTest({{ lookup_input }} := {{ table.last_lookup + 1.0 }});
AssertFalse(fbTest.bFound, 'Value should not be in table');
AssertFalse(fbTest.bError, 'No error expected');

{% for row in table.test_values %}
fbTest({{ lookup_input }} := {{ row[lookup_input] }});
AssertTrue(fbTest.bFound, 'Value should be in table');
AssertFalse(fbTest.bError, 'No error expected');
{%- for output in outputs %}
AssertEquals_LREAL(Expected:={{ row[output] }}, Actual:=fbTest.{{ output }}, Delta:=0.01, Message:='Failed at {{ row.values() | join(", ")}}');
{%- endfor %}
{%- endfor %}

TEST_FINISHED();
{%- endfor %}
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>
